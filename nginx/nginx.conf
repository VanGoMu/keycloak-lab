# Nginx como Reverse Proxy para Keycloak

upstream keycloak_backend {
    # Puedes añadir múltiples instancias para load balancing
    server keycloak-dev:8080;
    # server keycloak-dev-2:8080;
}

# Redirigir HTTP a HTTPS
server {
    listen 80;
    server_name auth.tudominio.com;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# Configuración HTTPS
server {
    listen 443 ssl http2;
    server_name auth.tudominio.com;

    # Certificados SSL
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Configuración SSL recomendada
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logs
    access_log /var/log/nginx/keycloak_access.log;
    error_log /var/log/nginx/keycloak_error.log;

    # Tamaño máximo de body (para subida de archivos en admin console)
    client_max_body_size 20M;

    # Proxy a Keycloak
    location / {
        proxy_pass http://keycloak_backend;
        
        # Headers requeridos por Keycloak
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
        
        # WebSocket support (para admin console)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://keycloak_backend:9000/health;
        access_log off;
    }

    # Metrics endpoint (protegido - solo acceso interno)
    location /metrics {
        deny all;
        proxy_pass http://keycloak_backend:9000/metrics;
    }
}
